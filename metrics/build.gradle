/*
 * Copyright (c) 2020 CodeHead Systems. All rights reserved
 */

apply plugin: 'idea'

ext {
    appName = "metrics"
}

base {
    archivesName = "${appName}"
    version = "${version}"
}

testing {
    suites {
        test {
            useJUnitJupiter()
            dependencies {
                implementation libs.junit.jupiter.api
                implementation libs.assertj.core
                implementation libs.mockito.junit.jupiter
                implementation libs.mockito.core
                // Use JUnit Jupiter Engine for testing.
                runtimeOnly libs.junit.jupiter.engine
                implementation libs.log4j.api
                implementation libs.log4j.core
            }
        }
    }
}
dependencies {
    implementation libs.micrometer.core
    implementation libs.metrics.core
    implementation libs.slf4j.api
    implementation libs.dagger // Common files for runtime
    annotationProcessor libs.dagger.compiler
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = appName
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Metrics'
                description = 'Classes to integrate micrometer to dropwizard, and make metrics easier to use.'
                url = 'https://github.com/wolpert/metrics'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'wolpert'
                        name = 'Ned Wolpert'
                        email = 'ned.wolpert@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/wolpert/metrics.git'
                    developerConnection = 'scm:git:ssh://github.com/wolpert/metrics.git'
                    url = 'https://github.com/wolpert/metrics/'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            name = "ossrh"
            credentials(PasswordCredentials)
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}